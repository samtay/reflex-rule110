#!/usr/bin/env bash

###################
# Utils
###################

util/help() {
  cat <<-EOF

  Build utility

  Usage: build [OPTIONS]

         # build via ghcjs (default compiler)
         build

         # build via ghc
         build --ghc

         # enter a nix-shell with ghc compiler
         build -s --ghc

         # build and push output to gh-pages branch
         build --push

  Options:
    --help               Display help

    -s | --shell-only    Enter nix-shell

    --ghc | --ghcjs      Specify compiler (default: ghcjs)

    --push               Build via ghcjs and push output to gh-pages

EOF
  exit $1
}

util/error(){
  printf "\033[31m%s\n\033[0m" "$@" >&2
  exit 1
}

util/info(){
  printf "\033[1;36m%s\n\033[0m" "$@" >&2
}

###################
# Runtime funcs
###################

build/get_run_opts() {
  case "$COMPILER" in
    ghc) echo "cabal configure && cabal build" ;;
    ghcjs) echo "cabal configure --ghcjs && cabal build" ;;
    *) util/error "Invalid compiler: $COMPILER" ;;
  esac
}

build/nix_shell() {
  if $RUN; then
    nix-shell --argstr compiler "$COMPILER" --run "$(build/get_run_opts)"
  else
    nix-shell --argstr compiler "$COMPILER"
  fi
}

build/push_to_github() {
    util/info "Building via ghcjs..."
    ( COMPILER="ghcjs" RUN=true build/nix_shell )

    util/info "Cloning gh-pages into tempdir..."
    tmpdir=$(mktemp -d)
    git clone --single-branch --branch gh-pages \
        git@github.com:samtay/reflex-rule110.git \
        $tmpdir

    util/info "Pushing last build to gh-pages branch..."
    cp -R dist/build/rule110/rule110.jsexe/* $tmpdir
    cd $tmpdir
    git add .
    git commit -m 'Update ghcjs build output' || {
      util/error "No changes to deploy"
    }
    git push

    util/info "Done!"
}

main(){
  set -eo pipefail

  # defaults
  local operand="build/nix_shell" 
  COMPILER="ghcjs"
  RUN=true
  CACHE_OPTS="--option extra-binary-caches https://nixcache.reflex-frp.org --option extra-binary-caches https://ryantrinkle.com:5443 -j 8"

  while [ $# -ne 0 ]; do
    case $1 in
      -h|--help|help)    util/help ;;
      -s|--shell-only)   RUN=false ;;
      --ghc)             COMPILER="ghc" ;;
      --ghcjs)           COMPILER="ghcjs" ;;
      --push)            operand="build/push_to_github" ;;
      *)                 util/error "invalid argument: $1"
    esac
    shift
  done

  $operand
}

main "$@"
